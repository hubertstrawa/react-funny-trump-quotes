{"ast":null,"code":"import _slicedToArray from \"/Users/vinyljam/Desktop/travel/travel/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vinyljam/Desktop/travel/travel/src/App.js\";\nimport React, { useState } from 'react';\nimport Navbar from './components/layout/Navbar';\nimport Search from './components/quotes/Search';\nimport Quotes from './components/quotes/Quotes';\nimport Spinner from './components/layout/Spinner';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        quotes = _useState2[0],\n        setQuotes = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        count = _useState4[0],\n        setCount = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  const searchQuotes = async text => {\n    try {\n      setLoading(true);\n      const res = await axios.get(\"https://cors-anywhere.herokuapp.com/https://api.tronalddump.io/search/quote?query=\".concat(text));\n      setQuotes(res.data._embedded.quotes);\n      setCount(res.data.count);\n      console.log(res.data._embedded.quotes);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Navbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Search, {\n    search: searchQuotes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), loading && React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(Quotes, {\n    quotes: quotes,\n    count: count,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/vinyljam/Desktop/travel/travel/src/App.js"],"names":["React","useState","Navbar","Search","Quotes","Spinner","axios","App","quotes","setQuotes","count","setCount","loading","setLoading","searchQuotes","text","res","get","data","_embedded","console","log","err"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBACYN,QAAQ,CAAC,EAAD,CADpB;AAAA;AAAA,QACTO,MADS;AAAA,QACDC,SADC;;AAAA,qBAEUR,QAAQ,CAAC,CAAD,CAFlB;AAAA;AAAA,QAETS,KAFS;AAAA,QAEFC,QAFE;;AAAA,qBAGcV,QAAQ,CAAC,KAAD,CAHtB;AAAA;AAAA,QAGTW,OAHS;AAAA,QAGAC,UAHA;;AAKhB,QAAMC,YAAY,GAAG,MAAMC,IAAN,IAAc;AACjC,QAAI;AACFF,MAAAA,UAAU,CAAC,IAAD,CAAV;AAEA,YAAMG,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,6FACqEF,IADrE,EAAlB;AAGAN,MAAAA,SAAS,CAACO,GAAG,CAACE,IAAJ,CAASC,SAAT,CAAmBX,MAApB,CAAT;AACAG,MAAAA,QAAQ,CAACK,GAAG,CAACE,IAAJ,CAASR,KAAV,CAAR;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACE,IAAJ,CAASC,SAAT,CAAmBX,MAA/B;AACAK,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAVD,CAUE,OAAOS,GAAP,EAAY;AACZF,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACD;AACF,GAdD;;AAgBA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAER,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGF,OAAO,IAAI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHd,EAIE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEJ,MAAhB;AAAwB,IAAA,KAAK,EAAEE,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CA7BD;;AA+BA,eAAeH,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport Navbar from './components/layout/Navbar';\nimport Search from './components/quotes/Search';\nimport Quotes from './components/quotes/Quotes';\nimport Spinner from './components/layout/Spinner';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [quotes, setQuotes] = useState([]);\n  const [count, setCount] = useState(0);\n  const [loading, setLoading] = useState(false);\n\n  const searchQuotes = async text => {\n    try {\n      setLoading(true);\n\n      const res = await axios.get(\n        `https://cors-anywhere.herokuapp.com/https://api.tronalddump.io/search/quote?query=${text}`\n      );\n      setQuotes(res.data._embedded.quotes);\n      setCount(res.data.count);\n      console.log(res.data._embedded.quotes);\n      setLoading(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className='App'>\n      <Navbar />\n      <Search search={searchQuotes} />\n      {loading && <Spinner />}\n      <Quotes quotes={quotes} count={count} />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}